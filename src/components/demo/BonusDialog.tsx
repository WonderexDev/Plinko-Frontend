import React from "react";
import { Button } from "@/components/ui/button";
import { useToast } from "@/hooks/use-toast";
import { Colors } from "@/constants/colors";

const BonusIcon = (
  <svg
    width="113"
    height="112"
    viewBox="0 0 113 112"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g filter="url(#filter0_iiii_0_1237)">
      <rect x="0.5" width="112" height="112" rx="20" fill="#FF80D5" />
      <g opacity="0.75">
        <path
          d="M46.09 20.0353C43.2735 20.4679 41.3959 21.4394 40.9061 22.7374C40.2449 24.4926 41.6408 26.4192 45.0695 28.46L45.8369 28.9254L35.7223 28.9662C26.2689 29.007 25.575 29.0152 25.2321 29.1539C24.1872 29.5703 23.4606 30.3132 23.0688 31.3744C22.9218 31.7499 22.9137 32.1255 22.881 36.3542C22.8647 39.2849 22.8892 41.1625 22.9382 41.5789C23.1014 42.8034 23.8117 43.7993 24.9056 44.3381L25.4362 44.5994H56.4985H87.5608L88.0996 44.3381C88.7771 44.0034 89.4057 43.3748 89.7323 42.7218C89.9282 42.3136 89.9935 42.0442 90.0507 41.4074C90.1486 40.338 90.1486 32.6643 90.0507 32.003C89.9119 31.0071 89.3241 30.0683 88.5159 29.5458C87.6097 28.9662 88.5077 29.0152 77.2747 28.9662L67.1601 28.9254L67.9274 28.46C69.903 27.2845 71.299 26.0436 71.8868 24.9579C72.197 24.3864 72.2133 24.313 72.2133 23.6599C72.2133 22.8109 72.0174 22.3537 71.4051 21.7578C70.3194 20.7047 67.5356 19.8965 65.4131 20.0108C62.6211 20.1659 60.066 21.6516 58.1557 24.2395C57.6006 24.9824 56.8577 26.1579 56.6536 26.6151C56.5965 26.7457 56.5311 26.8437 56.5066 26.8437C56.4822 26.8437 56.3515 26.6396 56.2209 26.3865C55.2984 24.6313 53.829 22.8354 52.4575 21.7986C51.6493 21.1945 50.2534 20.5169 49.2737 20.2638C48.6533 20.1006 48.2043 20.0516 47.3961 20.0271C46.8165 20.0108 46.2287 20.0189 46.09 20.0353ZM48.7023 22.6394C50.8411 23.2109 52.8494 25.1375 54.278 27.9784C54.5066 28.4437 54.7025 28.8601 54.7025 28.9009C54.7025 28.9335 54.0331 28.9662 53.2086 28.9662H51.7146L50.6779 28.5172C46.7022 26.8028 43.1919 24.5252 43.1919 23.668C43.1919 23.4068 44.4491 22.868 45.7226 22.5905C46.5471 22.4027 47.9349 22.4272 48.7023 22.6394ZM67.2989 22.6068C68.2458 22.7945 69.2499 23.1619 69.601 23.4476L69.8459 23.6435L69.6826 23.9456C69.1438 24.966 65.6253 27.1294 62.0905 28.6233L61.2742 28.9662H59.7802H58.2863L58.3353 28.7784C58.4496 28.4192 59.2986 26.8845 59.7802 26.1742C61.813 23.2109 64.3518 22.0027 67.2989 22.6068ZM47.3553 36.8032V42.1911L36.6121 42.1748L25.8689 42.1503L25.6321 41.8809L25.3954 41.6197V36.8767C25.3954 32.5581 25.4117 32.1091 25.5342 31.8969C25.8362 31.3908 25.1505 31.4152 36.7672 31.4152H47.3553V36.8032ZM63.1926 36.8032V42.1911H56.4985H49.8044V36.8032V31.4152H56.4985H63.1926V36.8032ZM87.0628 31.5377C87.6179 31.8071 87.6016 31.6193 87.6016 36.8032C87.6016 41.8238 87.6097 41.7585 87.1771 42.0605C87.0138 42.1748 85.8628 42.1911 76.3196 42.1911H65.6417V36.8032V31.4152H76.2216C85.5036 31.4152 86.8342 31.4316 87.0628 31.5377Z"
          fill="black"
        />
        <path
          d="M31.2324 46.9176C31.0038 47.0156 30.7262 47.3258 30.6283 47.6034C30.5629 47.7585 30.5385 49.6361 30.5385 53.3178C30.5385 59.5466 30.5058 59.2038 31.1915 59.5548C31.5426 59.7344 31.616 59.7426 34.2202 59.7426C37.1019 59.7426 37.3632 59.7099 37.9673 59.2936C38.1306 59.1793 38.3836 58.9262 38.5142 58.7384C38.9551 58.1262 38.9877 57.9139 38.9877 55.8649C38.9877 54.2648 38.9632 53.9301 38.8408 53.6117C38.702 53.2525 38.702 53.228 38.8408 52.9178C38.9714 52.6403 38.9877 52.3382 38.9877 50.6402C38.9877 48.8197 38.9796 48.6565 38.8163 48.3054C38.5877 47.8156 38.1959 47.3748 37.7305 47.1054L37.355 46.885L34.3753 46.8686C32.7344 46.8605 31.3222 46.885 31.2324 46.9176ZM36.5795 50.681V52.0688H34.7835H32.9875V50.681V49.2932H34.7835H36.5795V50.681ZM36.5795 55.9057V57.2935H34.7835H32.9875V55.9057V54.5179H34.7835H36.5795V55.9057Z"
          fill="black"
        />
        <path
          d="M42.8163 47.0404C42.3183 47.269 41.8857 47.7016 41.6244 48.2159L41.4367 48.5996L41.4122 53.1385C41.3877 57.5387 41.3959 57.6938 41.5591 58.1265C41.7795 58.7306 42.2041 59.1959 42.7673 59.4734L43.2327 59.702H45.6409H48.0492L48.5145 59.4734C49.0206 59.2285 49.3716 58.8612 49.6574 58.2734L49.8451 57.906V53.2936V48.6812L49.6492 48.2567C49.4288 47.7669 48.89 47.2281 48.392 46.9996C48.0818 46.8608 47.8287 46.8444 45.6409 46.8444C43.2816 46.8444 43.2245 46.8526 42.8163 47.0404ZM47.4369 53.2936V57.2938H45.6409H43.8449V53.2936V49.2935H45.6409H47.4369V53.2936Z"
          fill="black"
        />
        <path
          d="M52.8167 47.0322C52.2697 47.3996 52.2942 47.1138 52.2942 53.31C52.2942 58.8448 52.2942 58.9183 52.4657 59.1387C53.0371 59.9061 54.0086 59.9224 54.5229 59.1714C54.7025 58.902 54.7025 58.8857 54.7025 55.7998C54.7025 53.9875 54.7351 52.7222 54.7759 52.7712C54.8168 52.812 55.6821 54.3059 56.7025 56.0856C58.0414 58.4448 58.6291 59.3836 58.8087 59.5143C58.9965 59.653 59.1843 59.702 59.4945 59.702C59.9516 59.702 60.2292 59.5551 60.5312 59.1387C60.7027 58.9183 60.7027 58.8448 60.7027 53.261C60.7027 46.975 60.7353 47.3669 60.1476 46.9995C59.772 46.7628 59.0373 46.8118 58.7353 47.0975C58.2944 47.5057 58.2944 47.4975 58.2944 50.7793C58.2944 53.3344 58.2781 53.7998 58.1883 53.7018C58.0903 53.5957 56.1556 50.2405 54.9311 48.0526C54.3923 47.0975 54.0984 46.8444 53.5269 46.8444C53.2085 46.8444 53.0208 46.8934 52.8167 47.0322Z"
          fill="black"
        />
        <path
          d="M63.715 46.9993C63.5763 47.0891 63.3803 47.3177 63.2824 47.5217C63.1028 47.8891 63.1028 47.8973 63.1273 52.9015L63.1518 57.9058L63.3477 58.3058C63.6008 58.8201 64.0824 59.3017 64.5722 59.5303C64.9233 59.6936 65.0947 59.7018 67.2417 59.7262C69.4295 59.7507 69.552 59.7426 70.0091 59.5711C70.6459 59.3344 71.1929 58.7874 71.4296 58.167C71.601 57.7017 71.601 57.6037 71.601 52.7383C71.601 47.2034 71.6255 47.4238 71.0296 47.0238C70.6377 46.7625 69.9112 46.7952 69.5928 47.0972C69.1356 47.5217 69.152 47.3503 69.152 52.5178V57.2935H67.356H65.56L65.5437 52.4117C65.5192 47.685 65.511 47.5299 65.3559 47.3177C65.2661 47.2034 65.0947 47.0483 64.9722 46.9748C64.6783 46.7952 64.0253 46.8115 63.715 46.9993Z"
          fill="black"
        />
        <path
          d="M75.3808 47.0564C74.8828 47.3013 74.4256 47.7748 74.1807 48.3054C74.0174 48.6565 74.0093 48.8116 74.0093 50.6402C74.0093 52.5831 74.0093 52.6076 74.2215 53.0566C74.4746 53.5954 74.8991 54.0281 75.4216 54.2893C75.7889 54.4689 75.8706 54.4771 77.887 54.4771H79.9687L79.9932 55.8812L80.0095 57.2935H77.4788C74.7685 57.2935 74.7032 57.3017 74.3195 57.718C73.7644 58.3221 74.0583 59.4323 74.8501 59.6609C75.046 59.7262 76.0991 59.7426 77.9278 59.7262L80.7034 59.7017L81.1361 59.465C81.6259 59.1956 81.9606 58.8446 82.23 58.3303C82.4096 58.0037 82.4177 57.8731 82.4422 56.0853C82.4749 53.824 82.4177 53.5383 81.8381 52.8933C81.1524 52.126 81.1116 52.1178 78.6217 52.0688L76.4583 52.028L76.4338 50.6647L76.4175 49.3014L79.0217 49.2769C81.5116 49.2524 81.6422 49.2442 81.8544 49.081C82.6218 48.5095 82.6381 47.5299 81.8953 47.0319C81.6177 46.8442 81.6014 46.8442 78.7033 46.8442H75.7971L75.3808 47.0564Z"
          fill="black"
        />
        <path
          d="M25.8035 62.0448C25.6565 62.1509 25.4525 62.3387 25.3627 62.4612L25.1912 62.6897L25.1667 75.7269C25.1586 84.8129 25.1749 88.8947 25.2402 89.1886C25.5014 90.4703 26.5137 91.5315 27.8036 91.8744C28.424 92.0458 84.5892 92.0377 85.2014 91.8744C86.5076 91.5315 87.5199 90.4376 87.7648 89.1233C87.8219 88.8376 87.8383 84.1109 87.8301 75.6861C87.8056 62.7061 87.8056 62.6897 87.6342 62.4693C87.5444 62.3469 87.3648 62.1673 87.2423 62.0775L87.0219 61.906L56.5474 61.8816L26.0729 61.8652L25.8035 62.0448ZM49.4778 76.927V89.5396H38.9713C29.1261 89.5396 28.4403 89.5315 28.1709 89.3927C28.0076 89.3111 27.828 89.1315 27.7464 88.9682C27.6076 88.6988 27.5995 87.9314 27.5995 76.4943V64.3143H38.5386H49.4778V76.927ZM61.0537 76.9025L61.0292 89.4988H56.4984H51.9676L51.9432 76.9025L51.9268 64.3143H56.4984H61.07L61.0537 76.9025ZM85.3974 76.478C85.3974 89.8743 85.43 89.0498 84.8912 89.3764C84.6218 89.5396 84.5075 89.5396 74.0745 89.5396H63.5191V76.927V64.3143H74.4582H85.3974V76.478Z"
          fill="black"
        />
      </g>
    </g>
    <defs>
      <filter
        id="filter0_iiii_0_1237"
        x="-255.5"
        y="-256"
        width="624"
        height="624"
        filterUnits="userSpaceOnUse"
        colorInterpolationFilters="sRGB"
      >
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="0.5" />
        <feGaussianBlur stdDeviation="0.25" />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.3 0"
        />
        <feBlend
          mode="normal"
          in2="shape"
          result="effect1_innerShadow_0_1237"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feMorphology
          radius="0.5"
          operator="erode"
          in="SourceAlpha"
          result="effect2_innerShadow_0_1237"
        />
        <feOffset />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0.3 0"
        />
        <feBlend
          mode="normal"
          in2="effect1_innerShadow_0_1237"
          result="effect2_innerShadow_0_1237"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feMorphology
          radius="8"
          operator="dilate"
          in="SourceAlpha"
          result="effect3_innerShadow_0_1237"
        />
        <feOffset dy="-4" />
        <feGaussianBlur stdDeviation="8" />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0.8 0 0 0 0 0.16 0 0 0 0 0.584727 0 0 0 0.5 0"
        />
        <feBlend
          mode="normal"
          in2="effect2_innerShadow_0_1237"
          result="effect3_innerShadow_0_1237"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feMorphology
          radius="8"
          operator="dilate"
          in="SourceAlpha"
          result="effect4_innerShadow_0_1237"
        />
        <feOffset dy="8" />
        <feGaussianBlur stdDeviation="8" />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 1 0 0 0 0 0.85 0 0 0 0 0.95 0 0 0 0.3 0"
        />
        <feBlend
          mode="normal"
          in2="effect3_innerShadow_0_1237"
          result="effect4_innerShadow_0_1237"
        />
      </filter>
    </defs>
  </svg>
);

interface BonusDialogProps {
  showBonus: boolean;
  setShowBonus: (show: boolean) => void;
  email: string;
  setEmail: (email: string) => void;
  setShowLogin: (show: boolean) => void;
}

const BonusDialog: React.FC<BonusDialogProps> = ({
  showBonus,
  setShowBonus,
  email,
  setEmail,
  setShowLogin,
}) => {
  const { toast } = useToast();

  const handleBonusSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    if (!email.includes("@")) {
      toast({
        title: "Invalid email",
        description: "Please enter a valid email address",
        variant: "destructive",
      });
      return;
    }

    localStorage.setItem("userEmail", email);
    setEmail(email);
    setShowBonus(false);
    setShowLogin(true);
  };

  return (
    <div
      className={`min-h-screen w-[100vw] bg-gradient-to-b from-[#3a2a40] to-[#2a1a30] border-none p-0 mx-auto overflow-hidden ${
        showBonus ? "block" : "hidden"
      }`}
    >
      <div className="flex flex-col items-center justify-center p-8 h-[90vh]">
        <div className="bg-pink-400 w-20 h-20 rounded-2xl flex items-center justify-center mb-6">
          {BonusIcon}
        </div>
        <h2 className="text-white text-3xl font-bold text-center mb-2">
          You won 150% deposit bonus
        </h2>
        <p className="text-gray-300 text-center mb-6">
          Register with your email to use it
        </p>
        <div className="w-full space-y-4">
          <div className="relative">
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              placeholder="your.email@provider.com"
              className="w-full bg-white/10 text-center text-white p-4 rounded-xl border border-white/10 focus:border-pink-400 focus:ring-1 focus:ring-pink-400 transition-all"
            />
          </div>
        </div>
      </div>
      <div className="h-[10vh] px-4">
        <Button
          onClick={handleBonusSubmit}
          type="submit"
          className={`w-full ${Colors.pink_bg} hover:bg-pink-500 ${Colors.pink_button}  py-4 rounded-xl font-medium transition-all`}
        >
          Continue
        </Button>
      </div>
    </div>
  );
};

export default BonusDialog;
